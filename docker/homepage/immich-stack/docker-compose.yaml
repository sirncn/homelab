name: immich

services:
  immich:
    container_name: immich
    image: ghcr.io/immich-app/immich-server:v1.121.0
    volumes:
      - $IMMICH_VOL_UPLOAD:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
      - /mnt/RAID1_22TB/maison:/mnt/RAID1_22TB/maison
    ports:
      - $IMMICH_PORT:2283
    depends_on:
      - redis
      - database
    restart: always
    healthcheck:
      disable: false

  immich-machine-learning:
    container_name: immich_machine_learning
    image: ghcr.io/immich-app/immich-machine-learning:v1.121.0
    volumes:
      - model-cache:/cache
    restart: always
    healthcheck:
      disable: false

  redis:
    container_name: immich_redis
    image: docker.io/redis:6.2-alpine@sha256:2ba50e1ac3a0ea17b736ce9db2b0a9f6f8b85d4c27d5f5accc6a416d8f42c6d5
    healthcheck:
      test: redis-cli ping || exit 1
    restart: always

  database:
    container_name: immich_postgres
    image: docker.io/tensorchord/pgvecto-rs:pg14-v0.2.0@sha256:90724186f0a3517cf6914295b5ab410db9ce23190a2d9d0b9dd6463e3fa298f0
    environment:
      POSTGRES_PASSWORD: $IMMICH_DB_PASSWORD
      POSTGRES_USER: $IMMICH_DB_USERNAME
      POSTGRES_DB: $IMMICH_DB_DATABASE_NAME
      POSTGRES_INITDB_ARGS: "--data-checksums"
    volumes:
      - $IMMICH_DB_VOL_DATA:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready --dbname='$IMMICH_DB_DATABASE_NAME' --username='$IMMICH_DB_USERNAME' || exit 1; Chksum="$$(psql --dbname='$IMMICH_DB_DATABASE_NAME' --username='$IMMICH_DB_USERNAME' --tuples-only --no-align --command='SELECT COALESCE(SUM(checksum_failures), 0) FROM pg_stat_database')"; echo "checksum failure count is $$Chksum"; [ "$$Chksum" = '0' ] || exit 1
      interval: 5m
      start_interval: 30s
      start_period: 5m
    command:
      [
        "postgres",
        "-c",
        "shared_preload_libraries=vectors.so",
        "-c",
        'search_path="$$user", public, vectors',
        "-c",
        "logging_collector=on",
        "-c",
        "max_wal_size=2GB",
        "-c",
        "shared_buffers=512MB",
        "-c",
        "wal_compression=on"
      ]
    restart: always

volumes:
  model-cache:
